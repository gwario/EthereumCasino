{
  "contractName": "NewVegas",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "addManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "close",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "_origin",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "opened",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setTokenPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gamblingHall",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_exchangeFee",
          "type": "uint256"
        }
      ],
      "name": "setExchangeFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "removeManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_customer",
          "type": "address"
        },
        {
          "name": "_prize",
          "type": "uint256"
        },
        {
          "name": "_gameName",
          "type": "bytes32"
        }
      ],
      "name": "payOutWin",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_gamblingHallAddress",
          "type": "address"
        }
      ],
      "name": "setGamingHall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "open",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "name": "_gamingHallAddress",
          "type": "address"
        },
        {
          "name": "_tokenPrice",
          "type": "uint256"
        },
        {
          "name": "_exchangeFee",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_origin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "OwnerPaidOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_customer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "CustomerPaidOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_customer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "CustomerBoughtIn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_customer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_game",
          "type": "bytes32"
        }
      ],
      "name": "CustomerClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Opened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Closed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newBalance",
          "type": "uint256"
        }
      ],
      "name": "EtherBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newTokenBalance",
          "type": "uint256"
        }
      ],
      "name": "TokenBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newExchangeFee",
          "type": "uint256"
        }
      ],
      "name": "ExchangeFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newGamblingHall",
          "type": "address"
        }
      ],
      "name": "GamblingHallChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newToken",
          "type": "address"
        }
      ],
      "name": "TokenChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_newTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "TokenPriceChangedChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cashout",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461016d5780630988ca8c146101fd578063144fa6d714610286578063217fe6c6146102c95780632d06177a1461036a5780632ecd3be4146103ad57806343d726d6146103d85780634c123019146103ef5780635f88eade146104ba57806363bd1d4a146104e95780636a61e5fc146105005780637ff9b5961461052d57806384054d3d146105585780639673c8fa146105625780639df8cc7b146105b9578063a6f2ae3a146105e6578063ac18de43146105f0578063c4b0eb0a14610633578063d26b9dad146106a6578063fc0c546a146106e9578063fcfff16f14610740575b7f5b380e44b2718e0f6646684aa0031a2fbe295724ea98c09a79273359ff478b573073ffffffffffffffffffffffffffffffffffffffff16316040518082815260200191505060405180910390a1005b34801561017957600080fd5b50610182610757565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c25780820151818401526020810190506101a7565b50505050905090810190601f1680156101ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020957600080fd5b50610284600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107f5565b005b34801561029257600080fd5b506102c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610876565b005b3480156102d557600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ae4565b604051808215151515815260200191505060405180910390f35b34801561037657600080fd5b506103ab600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6b565b005b3480156103b957600080fd5b506103c2610c2a565b6040518082815260200191505060405180910390f35b3480156103e457600080fd5b506103ed610c30565b005b3480156103fb57600080fd5b506104a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610cd5565b604051808215151515815260200191505060405180910390f35b3480156104c657600080fd5b506104cf6110fb565b604051808215151515815260200191505060405180910390f35b3480156104f557600080fd5b506104fe61110e565b005b34801561050c57600080fd5b5061052b6004803603810190808035906020019092919050505061128a565b005b34801561053957600080fd5b50610542611339565b6040518082815260200191505060405180910390f35b61056061133f565b005b34801561056e57600080fd5b50610577611352565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105c557600080fd5b506105e460048036038101908080359060200190929190505050611378565b005b6105ee611418565b005b3480156105fc57600080fd5b50610631600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061142b565b005b34801561063f57600080fd5b5061068c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080356000191690602001909291905050506114ae565b604051808215151515815260200191505060405180910390f35b3480156106b257600080fd5b506106e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611816565b005b3480156106f557600080fd5b506106fe611956565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074c57600080fd5b5061075561197c565b005b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b505050505081565b610872826000836040518082805190602001908083835b602083101515610831578051825260208201915060208101905060208303925061080c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020611a8090919063ffffffff16565b5050565b600360149054906101000a900460ff1615151561089257600080fd5b6040805190810160405280600781526020017f6d616e61676572000000000000000000000000000000000000000000000000008152506108d233826107f5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561090e57600080fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d108ca248943e98e1886bbc2c38beda701271994a14354258a11692b81b73cf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f2477354bd379990c7dcca2ddb82e20d6a58fd61936184ba983ef4a7c152119c4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a9057600080fd5b505af1158015610aa4573d6000803e3d6000fd5b505050506040513d6020811015610aba57600080fd5b81019080805190602001909291905050506040518082815260200191505060405180910390a15050565b6000610b63836000846040518082805190602001908083835b602083101515610b225780518252602082019150602081019050602083039250610afd565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020611a9990919063ffffffff16565b905092915050565b6040805190810160405280600581526020017f6f776e6572000000000000000000000000000000000000000000000000000000815250610bab33826107f5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610be757600080fd5b610c26826040805190810160405280600781526020017f6d616e6167657200000000000000000000000000000000000000000000000000815250611af2565b5050565b60055481565b600360149054906101000a900460ff161515610c4b57600080fd5b6040805190810160405280600781526020017f6d616e6167657200000000000000000000000000000000000000000000000000815250610c8b33826107f5565b6000600360146101000a81548160ff0219169083151502179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a150565b600060405180807f70726f64756374696f6e00000000000000000000000000000000000000000000815250600a019050604051809103902060001916826040518082805190602001908083835b602083101515610d475780518252602082019150602081019050602083039250610d22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415610fe2573073ffffffffffffffffffffffffffffffffffffffff1631610ea2600454600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e5957600080fd5b505af1158015610e6d573d6000803e3d6000fd5b505050506040513d6020811015610e8357600080fd5b8101908080519060200190929190505050611c4390919063ffffffff16565b11151515610eaf57600080fd5b7f2477354bd379990c7dcca2ddb82e20d6a58fd61936184ba983ef4a7c152119c4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610f8d57600080fd5b505af1158015610fa1573d6000803e3d6000fd5b505050506040513d6020811015610fb757600080fd5b81019080805190602001909291905050506040518082815260200191505060405180910390a16110ef565b7f21cb0d8274bbf272058d78b0ec3aa42a81f00faf1837677506ff68da72af64f085858585604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110b1578082015181840152602081019050611096565b50505050905090810190601f1680156110de5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b60019050949350505050565b600360149054906101000a900460ff1681565b6000600360149054906101000a900460ff1615151561112c57600080fd5b6040805190810160405280600581526020017f6f776e657200000000000000000000000000000000000000000000000000000081525061116c33826107f5565b3073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156111cc573d6000803e3d6000fd5b507fa1c1e1d63bceb71e42cf7346aa03b605ad6d1ef79cbdd4affb1f24d126871e453383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a17f5b380e44b2718e0f6646684aa0031a2fbe295724ea98c09a79273359ff478b573073ffffffffffffffffffffffffffffffffffffffff16316040518082815260200191505060405180910390a15050565b600360149054906101000a900460ff161515156112a657600080fd5b6040805190810160405280600781526020017f6d616e61676572000000000000000000000000000000000000000000000000008152506112e633826107f5565b6000821115156112f557600080fd5b816004819055507f730aaa630c08715de98c8479cbb90862050633938304e836c6fedf3462e614fc6004546040518082815260200191505060405180910390a15050565b60045481565b61134833611c7b565b151561135057fe5b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360149054906101000a900460ff1615151561139457600080fd5b6040805190810160405280600781526020017f6d616e61676572000000000000000000000000000000000000000000000000008152506113d433826107f5565b816005819055507f052c2b9920e6350ca28019c9e8a20e8dc0f44ab5eadb0ac974a65f09ae3c975d6005546040518082815260200191505060405180910390a15050565b61142133611f2c565b151561142957fe5b565b6040805190810160405280600581526020017f6f776e657200000000000000000000000000000000000000000000000000000081525061146b33826107f5565b6114aa826040805190810160405280600781526020017f6d616e6167657200000000000000000000000000000000000000000000000000815250612295565b5050565b600081600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561150f57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637c038fa1826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156115a857600080fd5b505af11580156115bc573d6000803e3d6000fd5b505050506040513d60208110156115d257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561161c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be45fd628686611665876123e6565b6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117085780820151818401526020810190506116ed565b50505050905090810190601f1680156117355780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561175657600080fd5b505af115801561176a573d6000803e3d6000fd5b505050506040513d602081101561178057600080fd5b810190808051906020019092919050505091507f8fb6aac58be817e65ad5b57c00119cb55155728b25f44fb48fe6e4e4f1e8ed58858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260001916600019168152602001935050505060405180910390a1509392505050565b600360149054906101000a900460ff1615151561183257600080fd5b6040805190810160405280600781526020017f6d616e616765720000000000000000000000000000000000000000000000000081525061187233826107f5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156118ae57600080fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fea4e249311d4fff2342feb8854867bfd2c1b2e6a502fd66ca29b57d3c510ce6782604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360149054906101000a900460ff1615151561199857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156119f657600080fd5b6040805190810160405280600781526020017f6d616e6167657200000000000000000000000000000000000000000000000000815250611a3633826107f5565b6001600360146101000a81548160ff0219169083151502179055507fd1dcd00534373f20882b79e6ab6875a5c358c5bd576448757ed50e63069ab51860405160405180910390a150565b611a8a8282611a99565b1515611a9557600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611b6f826000836040518082805190602001908083835b602083101515611b2e5780518252602082019150602081019050602083039250611b09565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206125ae90919063ffffffff16565b7fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b7004898282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611c04578082015181840152602081019050611be9565b50505050905090810190601f168015611c315780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b600080831415611c565760009050611c75565b8183029050818382811515611c6757fe5b04141515611c7157fe5b8090505b92915050565b6000806000600360149054906101000a900460ff161515611c9b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611cd757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611d9457600080fd5b505af1158015611da8573d6000803e3d6000fd5b505050506040513d6020811015611dbe57600080fd5b81019080805190602001909291905050509150611de660045483611c4390919063ffffffff16565b90503073ffffffffffffffffffffffffffffffffffffffff163181101515611e0d57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166108fc611e3c6005548461260c90919063ffffffff16565b9081150290604051600060405180830381858888f19350505050158015611e67573d6000803e3d6000fd5b507f722c0d2ab57adc217135fe1973477c7ffe7e17ca38d73e13753618721a5fa7898483604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a17f5b380e44b2718e0f6646684aa0031a2fbe295724ea98c09a79273359ff478b573073ffffffffffffffffffffffffffffffffffffffff16316040518082815260200191505060405180910390a1600192505050919050565b6000806000600360149054906101000a900460ff161515611f4c57600080fd5b346000101515611f5b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611f9757600080fd5b60045434811515611fa457fe5b06915060055482141515611fb757600080fd5b611fcc6004543461262590919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561208b57600080fd5b505af115801561209f573d6000803e3d6000fd5b505050506040513d60208110156120b557600080fd5b8101908080519060200190929190505050811015156120d357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561219857600080fd5b505af11580156121ac573d6000803e3d6000fd5b505050506040513d60208110156121c257600080fd5b810190808051906020019092919050505092507f9a75ad23c13bdc626fd85ca9084f6d47d4d1c527c6ae1d1d1145a43ed41211b38482604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a17f5b380e44b2718e0f6646684aa0031a2fbe295724ea98c09a79273359ff478b573073ffffffffffffffffffffffffffffffffffffffff16316040518082815260200191505060405180910390a15050919050565b612312826000836040518082805190602001908083835b6020831015156122d157805182526020820191506020810190506020830392506122ac565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061263b90919063ffffffff16565b7fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156123a757808201518184015260208101905061238c565b50505050905090810190601f1680156123d45780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b606060006060600091505b60208210801561245557506000848360208110151561240c57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900414155b15612465578160010191506123f1565b816040519080825280601f01601f1916602001820160405280156124985781602001602082028038833980820191505090505b509050600091505b602082108015612525575060007f01000000000000000000000000000000000000000000000000000000000000000284836020811015156124dd57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156125a457838260208110151561253857fe5b1a7f010000000000000000000000000000000000000000000000000000000000000002818381518110151561256957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508160010191506124a0565b8092505050919050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600082821115151561261a57fe5b818303905092915050565b6000818381151561263257fe5b04905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820f9b57cf69bdc3f1ab1f9e562288c3a210e6d4fb855076d616f19113dfbc771580029",
  "sourceMap": "246:1272:3:-;;;662:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:13;788:18;808:11;821:12;3944:1:0;3919:27;;:13;:27;;;;3911:36;;;;;;;;3995:1;3965:32;;:18;:32;;;;3957:41;;;;;;;;4030:1;4016:11;:15;4008:24;;;;;;;;4063:13;4043:5;;:34;;;;;;;;;;;;;;;;;;4115:18;4087:12;;:47;;;;;;;;;;;;;;;;;;4154:5;4145:6;;:14;;;;;;;;;;;;;;;;;;4182:11;4169:10;:24;;;;4217:12;4203:11;:26;;;;4240:31;4248:10;4260;;;;;;;;;;;;;;;;;;4240:7;;;:31;;;:::i;:::-;4281:33;4289:10;4301:12;;;;;;;;;;;;;;;;;;4281:7;;;:33;;;:::i;:::-;3792:529;;;;922:9:3;872:46;907:10;;872:5;;;;;;;;;;;:15;;;896:4;872:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;872:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;872:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;872:30:3;;;;;;;;;;;;;;;;:34;;;;;;:46;;;;;:::i;:::-;:59;;864:68;;;;;;;;979:18;;;;;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;:::i;:::-;;662:342;;;;246:1272;;1439:135:20;1508:25;1528:4;1508:5;1514:8;1508:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1508:15:20;;;;;;;;;;;;;;;;;;;;;:19;;;;;;:25;;;;;:::i;:::-;1544;1554:4;1560:8;1544:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1544:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:135;;:::o;203:373:18:-;261:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;532:1;528;:5;524:9;;555:1;550;546;:5;;;;;;;;:10;539:18;;;;;;570:1;563:8;;203:373;;;;;:::o;326:96:21:-;413:4;393;:11;;:17;405:4;393:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;326:96;;:::o;246:1272:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "246:1272:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8453:42:0;8481:4;8473:21;;;8453:42;;;;;;;;;;;;;;;;;;246:1272:3;3204:18:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3204:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3204:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:110:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:110:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10036:289:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10036:289:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:132:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1189:132:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9518:158:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9518:158:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3476:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3476:23:0;;;;;;;;;;;;;;;;;;;;;;;5441:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5441:113:0;;;;;;7613:677;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7613:677:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3349:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3349:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;7173:364;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7173:364:0;;;;;;10434:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10434:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;3375:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3375:22:0;;;;;;;;;;;;;;;;;;;;;;;1381:88:3;;;;;;3259:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3259:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;11160:174;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11160:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;1188:80:3;;;;;;9798:122:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9798:122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8720:275;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8720:275:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10779:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10779:271:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3229:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3229:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;5256:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5256:120:0;;;;;;3204:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;941:110:20:-;1019:27;1041:4;1019:5;1025:8;1019:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1019:15:20;;;;;;;;;;;;;;;;;;;;;:21;;:27;;;;:::i;:::-;941:110;;:::o;10036:289:0:-;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;10104:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;10161:1:0;10136:27;;:13;:27;;;;10128:36;;;;;;;;10195:13;10175:5;;:34;;;;;;;;;;;;;;;;;;10225:27;10238:13;10225:27;;;;;;;;;;;;;;;;;;;;;;10267:51;10287:5;;;;;;;;;;;:15;;;10311:4;10287:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10287:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10287:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10287:30:0;;;;;;;;;;;;;;;;10267:51;;;;;;;;;;;;;;;;;;4610:1;10036:289;:::o;1189:132:20:-;1270:4;1291:25;1311:4;1291:5;1297:8;1291:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1291:15:20;;;;;;;;;;;;;;;;;;;;;:19;;:25;;;;:::i;:::-;1284:32;;1189:132;;;;:::o;9518:158:0:-;9574:10;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;9624:1:0;9604:22;;:8;:22;;;;9596:31;;;;;;;;9638;9646:8;9656:12;;;;;;;;;;;;;;;;;;9638:7;:31::i;:::-;9518:158;;:::o;3476:23::-;;;;:::o;5441:113::-;4461:6;;;;;;;;;;;4453:15;;;;;;;;5485:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;5518:5:0;5509:6;;:14;;;;;;;;;;;;;;;;;;5539:8;;;;;;;;;;4478:1;5441:113::o;7613:677::-;7715:12;7763:23;;;;;;;;;;;;;;;;;;;7743:43;;;7753:5;7743:16;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7743:16:0;;;;;;;;;;;;;;;;:43;;;;7740:519;;;7918:4;7910:21;;;7860:46;7895:10;;7860:5;;;;;;;;;;;:15;;;7884:4;7860:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7860:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7860:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7860:30:0;;;;;;;;;;;;;;;;:34;;:46;;;;:::i;:::-;:71;;7852:80;;;;;;;;7952:51;7972:5;;;;;;;;;;;:15;;;7996:4;7972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7972:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7972:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7972:30:0;;;;;;;;;;;;;;;;7952:51;;;;;;;;;;;;;;;;;;7740:519;;;8200:48;8216:7;8225;8234:6;8242:5;8200:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8200:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7740:519;8279:4;8269:14;;7613:677;;;;;;:::o;3349:18::-;;;;;;;;;;;;;:::o;7173:364::-;7311:12;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;7218:10;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;7334:4:0;7326:21;;;7311:36;;7396:10;:19;;:28;7416:7;7396:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7396:28:0;7440:33;7453:10;7465:7;7440:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;7488:42;7516:4;7508:21;;;7488:42;;;;;;;;;;;;;;;;;;4610:1;7173:364;:::o;10434:210::-;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;10502:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;10548:1:0;10534:11;:15;10526:24;;;;;;;;10574:11;10561:10;:24;;;;10601:36;10626:10;;10601:36;;;;;;;;;;;;;;;;;;4610:1;10434:210;:::o;3375:22::-;;;;:::o;1381:88:3:-;1434:27;1450:10;1434:15;:27::i;:::-;1427:35;;;;;;1381:88::o;3259:32:0:-;;;;;;;;;;;;;:::o;11160:174::-;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;11230:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;11268:12:0;11254:11;:26;;;;11296:31;11315:11;;11296:31;;;;;;;;;;;;;;;;;;4610:1;11160:174;:::o;1188:80:3:-;1237:23;1249:10;1237:11;:23::i;:::-;1230:31;;;;;;1188:80::o;9798:122:0:-;9857:10;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;9879:34:0;9890:8;9900:12;;;;;;;;;;;;;;;;;;9879:10;:34::i;:::-;9798:122;;:::o;8720:275::-;8832:12;8812:9;5055:1;5022:35;;5030:12;;;;;;;;;;;5022:35;;;;5014:44;;;;;;;;5091:12;;;;;;;;;;;:27;;;5119:9;5091:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5091:38:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5091:38:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5091:38:0;;;;;;;;;;;;;;;;5077:52;;:10;:52;;;5069:61;;;;;;;;8867:5;;;;;;;;;;;:14;;;8882:9;8893:6;8901:25;8916:9;8901:14;:25::i;:::-;8867:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8867:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8867:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8867:60:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8867:60:0;;;;;;;;;;;;;;;;8857:70;;8943:45;8959:9;8970:6;8978:9;8943:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8720:275;;;;;;:::o;10779:271::-;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;10859:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;10923:1:0;10891:34;;:20;:34;;;;10883:43;;;;;;;;10965:20;10937:12;;:49;;;;;;;;;;;;;;;;;;11002:41;11022:20;11002:41;;;;;;;;;;;;;;;;;;;;;;4610:1;10779:271;:::o;3229:24::-;;;;;;;;;;;;;:::o;5256:120::-;4593:6;;;;;;;;;;;4592:7;4584:16;;;;;;;;4753:1;4727:28;;4735:5;;;;;;;;;;;4727:28;;;;4719:37;;;;;;;;5308:12;;;;;;;;;;;;;;;;;;2035:31:20;2045:10;2057:8;2035:9;:31::i;:::-;5341:4:0;5332:6;;:13;;;;;;;;;;;;;;;;;;5361:8;;;;;;;;;;4766:1;5256:120::o;663:107:21:-;749:15;753:4;759;749:3;:15::i;:::-;741:24;;;;;;;;663:107;;:::o;848:124::-;929:4;950;:11;;:17;962:4;950:17;;;;;;;;;;;;;;;;;;;;;;;;;943:24;;848:124;;;;:::o;1439:135:20:-;1508:25;1528:4;1508:5;1514:8;1508:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1508:15:20;;;;;;;;;;;;;;;;;;;;;:19;;:25;;;;:::i;:::-;1544;1554:4;1560:8;1544:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1544:25:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:135;;:::o;203:373:18:-;261:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;532:1;528;:5;524:9;;555:1;550;546;:5;;;;;;;;:10;539:18;;;;;;570:1;563:8;;203:373;;;;;:::o;6449:654:0:-;6520:12;6587:25;6651;4461:6;;;;;;;;;;;4453:15;;;;;;;;6573:1;6552:23;;:9;:23;;;;6544:32;;;;;;;;6615:5;;;;;;;;;;;:15;;;6631:9;6615:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6615:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6615:26:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6615:26:0;;;;;;;;;;;;;;;;6587:54;;6679:36;6704:10;;6679:20;:24;;:36;;;;:::i;:::-;6651:64;;6803:4;6795:21;;;6772:20;:44;6764:53;;;;;;;;6893:9;:18;;:57;6912:37;6937:11;;6912:20;:24;;:37;;;;:::i;:::-;6893:57;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6893:57:0;6966:48;6982:9;6993:20;6966:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;7029:42;7057:4;7049:21;;;7029:42;;;;;;;;;;;;;;;;;;7092:4;7082:14;;6449:654;;;;;:::o;5686:615::-;5753:12;5852;5942:19;4461:6;;;;;;;;;;;4453:15;;;;;;;;5789:9;5785:1;:13;5777:22;;;;;;;;5838:1;5817:23;;:9;:23;;;;5809:32;;;;;;;;5879:10;;5867:9;:22;;;;;;;;5852:37;;5919:11;;5908:7;:22;5900:31;;;;;;;;5964:25;5978:10;;5964:9;:13;;:25;;;;:::i;:::-;5942:47;;6025:5;;;;;;;;;;;:15;;;6049:4;6025:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6025:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6025:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6025:30:0;;;;;;;;;;;;;;;;6008:14;:47;6000:56;;;;;;;;6137:5;;;;;;;;;;;:14;;;6152:9;6163:14;6137:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6137:41:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6137:41:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6137:41:0;;;;;;;;;;;;;;;;6127:51;;6194:43;6211:9;6222:14;6194:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:42;6280:4;6272:21;;;6252:42;;;;;;;;;;;;;;;;;;5686:615;;;;;:::o;1697:143:20:-;1769:28;1792:4;1769:5;1775:8;1769:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1769:15:20;;;;;;;;;;;;;;;;;;;;;:22;;:28;;;;:::i;:::-;1808:27;1820:4;1826:8;1808:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1808:27:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:143;;:::o;9001:352:0:-;9062:5;9079:6;9173:19;9088:1;9079:10;;9099:65;9110:2;9106:1;:6;:28;;;;;9133:1;9121:4;9126:1;9121:7;;;;;;;;;;;;9116:13;;;:18;;9106:28;9099:65;;;9150:3;;;;;9099:65;;;9205:1;9195:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9195:12:0;;;;9173:34;;9221:1;9217:5;;9232:92;9243:2;9239:1;:6;:22;;;;;9260:1;9249:12;;:4;9254:1;9249:7;;;;;;;;;;;;:12;;;;;9239:22;9232:92;;;9289:4;9294:1;9289:7;;;;;;;;;;;;9277:6;9284:1;9277:9;;;;;;;;;;;;;;:19;;;;;;;;;;;9310:3;;;;;9232:92;;;9340:6;9333:13;;9001:352;;;;;:::o;326:96:21:-;413:4;393;:11;;:17;405:4;393:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;326:96;;:::o;1042:110:18:-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;658:272::-;716:7;924:1;920;:5;;;;;;;;913:12;;658:272;;;;:::o;487:100:21:-;577:5;557:4;:11;;:17;569:4;557:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;487:100;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"./GamblingHall.sol\";\nimport \"./token/CasinoToken.sol\";\nimport \"./Casino.sol\";\n\n/**\n * @title NewVegas\n * @author mariogastegger\n * @dev The casino.\n */\ncontract NewVegas is Casino {\n    using SafeMath for uint256;\n\n    /*\n     * Events.\n     */\n\n    /*\n     * Fields.\n     */\n\n\n    /**\n     * @param _tokenAddress the address of the initial token.\n     * @param _gamingHallAddress the address of the initial gaming hall.\n     * @param _tokenPrice the initial token price.\n     * @param _exchangeFee the initial fee for exchanging ether/tokens.\n     */\n    //TEST:\n    constructor(address _tokenAddress, address _gamingHallAddress, uint _tokenPrice, uint _exchangeFee)\n    Casino(_tokenAddress, _gamingHallAddress, _tokenPrice, _exchangeFee)\n    public payable {\n        require(token.balanceOf(address(this)).mul(tokenPrice) <= msg.value);//ensure winnings can be cashed out.\n\n        name = \"New Vegas\";\n    }\n\n    /*\n     * Modifiers.\n     */\n\n    /*\n     * Business function.\n     */\n\n    /**\n     * @dev Transfers tokens to the customer.\n     * @dev requires a fee.\n     */\n    //TEST:\n    function buy() external payable {\n        assert(buyInternal(msg.sender));\n    }\n\n    /**\n     * @dev Returns ether for the customer tokens.\n     * @dev requires a fee.\n     */\n    //TEST:\n    function cashout() external payable {\n        assert(cashoutInternal(msg.sender));\n    }\n\n\n    /*\n     * Maintenance functions.\n     */\n}\n",
  "sourcePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/NewVegas.sol",
  "ast": {
    "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/NewVegas.sol",
    "exportedSymbols": {
      "NewVegas": [
        1148
      ]
    },
    "id": 1149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1079,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1080,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 3067,
        "src": "26:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/GamblingHall.sol",
        "file": "./GamblingHall.sol",
        "id": 1081,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 1021,
        "src": "86:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/token/CasinoToken.sol",
        "file": "./token/CasinoToken.sol",
        "id": 1082,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 2781,
        "src": "115:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/Casino.sol",
        "file": "./Casino.sol",
        "id": 1083,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 752,
        "src": "149:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1084,
              "name": "Casino",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 751,
              "src": "267:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Casino_$751",
                "typeString": "contract Casino"
              }
            },
            "id": 1085,
            "nodeType": "InheritanceSpecifier",
            "src": "267:6:3"
          }
        ],
        "contractDependencies": [
          751,
          2877,
          3259
        ],
        "contractKind": "contract",
        "documentation": "@title NewVegas\n@author mariogastegger\n@dev The casino.",
        "fullyImplemented": true,
        "id": 1148,
        "linearizedBaseContracts": [
          1148,
          751,
          2877,
          3259
        ],
        "name": "NewVegas",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1088,
            "libraryName": {
              "contractScope": null,
              "id": 1086,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3066,
              "src": "286:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3066",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "280:27:3",
            "typeName": {
              "id": 1087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "854:150:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1113,
                              "name": "tokenPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "907:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1109,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3517,
                                      "src": "896:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_NewVegas_$1148",
                                        "typeString": "contract NewVegas"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_NewVegas_$1148",
                                        "typeString": "contract NewVegas"
                                      }
                                    ],
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "888:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "888:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1106,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87,
                                  "src": "872:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CasinoToken_$2780",
                                    "typeString": "contract CasinoToken"
                                  }
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3424,
                                "src": "872:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "872:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3007,
                            "src": "872:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3472,
                            "src": "922:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "922:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "872:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3475,
                        3476
                      ],
                      "referencedDeclaration": 3475,
                      "src": "864:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "864:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1120,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "979:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4e6577205665676173",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "986:11:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c3ec605872427a4515ebc348d0c4be82dc6c0010400adb1f69ed89b47b9e88eb",
                        "typeString": "literal_string \"New Vegas\""
                      },
                      "value": "New Vegas"
                    },
                    "src": "979:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "979:18:3"
                }
              ]
            },
            "documentation": "@param _tokenAddress the address of the initial token.\n@param _gamingHallAddress the address of the initial gaming hall.\n@param _tokenPrice the initial token price.\n@param _exchangeFee the initial fee for exchanging ether/tokens.",
            "id": 1125,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1099,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1090,
                    "src": "773:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1100,
                    "name": "_gamingHallAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1092,
                    "src": "788:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1101,
                    "name": "_tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1094,
                    "src": "808:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1102,
                    "name": "_exchangeFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1096,
                    "src": "821:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1103,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1098,
                  "name": "Casino",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 751,
                  "src": "766:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Casino_$751_$",
                    "typeString": "type(contract Casino)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "766:68:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "674:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "name": "_gamingHallAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "697:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1094,
                  "name": "_tokenPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "725:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1096,
                  "name": "_exchangeFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "743:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "673:88:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:3"
            },
            "scope": 1148,
            "src": "662:342:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "1220:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3472,
                              "src": "1249:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1249:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1129,
                          "name": "buyInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "1237:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1237:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1128,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1230:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:31:3"
                }
              ]
            },
            "documentation": "@dev Transfers tokens to the customer.\n@dev requires a fee.",
            "id": 1136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:0:3"
            },
            "scope": 1148,
            "src": "1188:80:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "1417:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3472,
                              "src": "1450:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1450:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1140,
                          "name": "cashoutInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "1434:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1139,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1427:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:35:3"
                }
              ]
            },
            "documentation": "@dev Returns ether for the customer tokens.\n@dev requires a fee.",
            "id": 1147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "cashout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:0:3"
            },
            "scope": 1148,
            "src": "1381:88:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1149,
        "src": "246:1272:3"
      }
    ],
    "src": "0:1519:3"
  },
  "legacyAST": {
    "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/NewVegas.sol",
    "exportedSymbols": {
      "NewVegas": [
        1148
      ]
    },
    "id": 1149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1079,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1080,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 3067,
        "src": "26:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/GamblingHall.sol",
        "file": "./GamblingHall.sol",
        "id": 1081,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 1021,
        "src": "86:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/token/CasinoToken.sol",
        "file": "./token/CasinoToken.sol",
        "id": 1082,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 2781,
        "src": "115:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mariogastegger/1_private/study/repository/SC_Ass0.3/dapp/contracts/Casino.sol",
        "file": "./Casino.sol",
        "id": 1083,
        "nodeType": "ImportDirective",
        "scope": 1149,
        "sourceUnit": 752,
        "src": "149:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1084,
              "name": "Casino",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 751,
              "src": "267:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Casino_$751",
                "typeString": "contract Casino"
              }
            },
            "id": 1085,
            "nodeType": "InheritanceSpecifier",
            "src": "267:6:3"
          }
        ],
        "contractDependencies": [
          751,
          2877,
          3259
        ],
        "contractKind": "contract",
        "documentation": "@title NewVegas\n@author mariogastegger\n@dev The casino.",
        "fullyImplemented": true,
        "id": 1148,
        "linearizedBaseContracts": [
          1148,
          751,
          2877,
          3259
        ],
        "name": "NewVegas",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1088,
            "libraryName": {
              "contractScope": null,
              "id": 1086,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3066,
              "src": "286:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3066",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "280:27:3",
            "typeName": {
              "id": 1087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "854:150:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1113,
                              "name": "tokenPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "907:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1109,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3517,
                                      "src": "896:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_NewVegas_$1148",
                                        "typeString": "contract NewVegas"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_NewVegas_$1148",
                                        "typeString": "contract NewVegas"
                                      }
                                    ],
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "888:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "888:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1106,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87,
                                  "src": "872:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CasinoToken_$2780",
                                    "typeString": "contract CasinoToken"
                                  }
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3424,
                                "src": "872:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "872:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3007,
                            "src": "872:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3472,
                            "src": "922:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "922:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "872:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3475,
                        3476
                      ],
                      "referencedDeclaration": 3475,
                      "src": "864:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "864:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "864:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1120,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "979:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4e6577205665676173",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "986:11:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c3ec605872427a4515ebc348d0c4be82dc6c0010400adb1f69ed89b47b9e88eb",
                        "typeString": "literal_string \"New Vegas\""
                      },
                      "value": "New Vegas"
                    },
                    "src": "979:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "979:18:3"
                }
              ]
            },
            "documentation": "@param _tokenAddress the address of the initial token.\n@param _gamingHallAddress the address of the initial gaming hall.\n@param _tokenPrice the initial token price.\n@param _exchangeFee the initial fee for exchanging ether/tokens.",
            "id": 1125,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1099,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1090,
                    "src": "773:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1100,
                    "name": "_gamingHallAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1092,
                    "src": "788:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1101,
                    "name": "_tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1094,
                    "src": "808:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1102,
                    "name": "_exchangeFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1096,
                    "src": "821:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1103,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1098,
                  "name": "Casino",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 751,
                  "src": "766:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Casino_$751_$",
                    "typeString": "type(contract Casino)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "766:68:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "674:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "name": "_gamingHallAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "697:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1094,
                  "name": "_tokenPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "725:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1096,
                  "name": "_exchangeFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "743:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "673:88:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:0:3"
            },
            "scope": 1148,
            "src": "662:342:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "1220:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3472,
                              "src": "1249:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1249:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1129,
                          "name": "buyInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 333,
                          "src": "1237:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1237:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1128,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1230:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:31:3"
                }
              ]
            },
            "documentation": "@dev Transfers tokens to the customer.\n@dev requires a fee.",
            "id": 1136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:0:3"
            },
            "scope": 1148,
            "src": "1188:80:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "1417:52:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3472,
                              "src": "1450:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1450:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1140,
                          "name": "cashoutInternal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "1434:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1139,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1427:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:35:3"
                }
              ]
            },
            "documentation": "@dev Returns ether for the customer tokens.\n@dev requires a fee.",
            "id": 1147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "cashout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:2:3"
            },
            "payable": true,
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:0:3"
            },
            "scope": 1148,
            "src": "1381:88:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1149,
        "src": "246:1272:3"
      }
    ],
    "src": "0:1519:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-19T12:08:17.238Z"
}